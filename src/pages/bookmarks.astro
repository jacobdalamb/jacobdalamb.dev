---
import Layout from "../layouts/BaseLayout.astro";
import ImageCard from "../components/ImageCard.svelte";
import Link from "../components/Link.astro";
import { formatDate } from "../utils/date";
import { getGistData } from "@/utils/getGist";
import {
  dataBookmarkNav,
  dataBookMarkPage,
  dataBookmarksLayout,
  moodBoard,
} from "../styles/data.css";

interface FileContent {
  content: string;
}

const gistData = getGistData();
const gistUpdatedAt = gistData.updated_at;
let bookmarks;
if (gistData && gistData.files && gistData.files["bookmarks.json"]) {
  bookmarks = JSON.parse(
    (gistData.files["bookmarks.json"] as unknown as FileContent).content,
  );
} else {
  console.error("No bookmarks found");
}

const props = {
  title: "",
  description: "",
  image: "home",
};

function groupByFolder(bookmarks: Array<any>) {
  return bookmarks.reduce((acc, bookmark) => {
    const folder = bookmark.folder || "Unsorted";
    if (!acc[folder]) acc[folder] = [];
    acc[folder].push(bookmark);
    return acc;
  }, {});
}

const groupedBookmarks = groupByFolder(bookmarks);

function cleanFolderName(folder: string): string {
  return folder.replace(/.*\//, "").trim();
}
---

<Layout {...props}>
  <nav class:list={dataBookmarkNav}>
    <ul>
      {
        Object.keys(groupedBookmarks).map((folder) => {
          const cleanedFolder = cleanFolderName(folder);
          return (
            <li>
              <Link href={`#${cleanedFolder}`}>{cleanedFolder}</Link>
            </li>
          );
        })
      }
    </ul>
  </nav>
  <div class:list={dataBookMarkPage}>
    <main class:list={dataBookmarksLayout}>
      <div>
        <h2>Bookmarks</h2>
        <small>
          Last updated on
          <time datetime={gistUpdatedAt}
            >{gistUpdatedAt ? formatDate(gistUpdatedAt) : ""}</time
          >
        </small>
      </div>
      <div>
        {
          Object.entries(groupedBookmarks).map(([folder, items]) => {
            const cleanedFolder = cleanFolderName(folder);
            return (
              <>
                <h3 id={cleanedFolder}>{cleanedFolder}</h3>
                <div class:list={moodBoard}>
                  <ImageCard items={items} client:load />
                </div>
              </>
            );
          })
        }
      </div>
    </main>
  </div>
</Layout>

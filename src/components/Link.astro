---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { href: rawHref, style, ...attrs } = Astro.props as Props;
const href = (rawHref instanceof URL ? rawHref.toString() : rawHref) ?? "";
const site = Astro.site;
const { pathname } = Astro.url;

function isActiveLink(url: string): boolean {
	return url === pathname || url === "." || url === "./";
}

function isExternalLink(url: string): boolean {
	return URL.canParse(url);
}

function isInternalLink(url: string): boolean {
	return URL.canParse(url, site?.toString());
}

const isExternal = isExternalLink(href);
const isInternal = isInternalLink(href);
const isActive = isActiveLink(href);

let relAttribute: object = {};

if (isExternal) {
	relAttribute = { rel: "external noopener noreferrer" };
} else if (isInternal && !isActive) {
	relAttribute = { rel: "prefetch" };
} else {
	relAttribute = {};
}
---

<a href={href} class:list={[{ active: isActive }]} {...relAttribute} {...attrs}>
  <slot />
</a>
